unit uPedidoController;

interface

uses FireDAC.Comp.Client, uConexaoFiredac;

Type
  TPedidoController = class
  public
    class function CalculaTotal(cQuant, cVlr: Currency): Currency;
    class function GravarPedido(DataSet: TFDMemTable): Boolean;

  end;

implementation

{ TPedidoController }

uses uDm;

class function TPedidoController.CalculaTotal(cQuant, cVlr: Currency): Currency;
begin
  Result := cQuant * cVlr;
end;

class function TPedidoController.GravarPedido(DataSet: TFDMemTable): Boolean;
var
  Query: TFDQuery;
  Transaction: TFDTransaction;
begin
  Result := false;

  Transaction := TFDTransaction.Create(Nil);
  Transaction.Connection := Dm.FConexao;

  if Transaction.Active then
    Transaction.Commit;
  Transaction.StartTransaction;

  try
    try
      with DataSet do
      begin
        DataSet.First;

        while not eof do
        begin

          Query := TConexaoFiredac.getInstancia.prepareStatement
            ('insert into PEDIDO_VENDA (codigo, data_emissao, ' +
            ' cod_cli, valor_pedido) values (:CODIGO, :DATA_EMISSAO, ' +
            ':COD_CLI, :VALOR_PEDIDO)  ');

          parambyname('CODIGO').AsInteger := DataSet.FieldByName('CODIGO')
            .AsInteger;
          parambyname('DATA_EMISSAO').AsDate :=
            DataSet.FieldByName('DATA_EMISSAO').AsInteger;
          parambyname('COD_CLI').AsInteger := DataSet.FieldByName('COD_CLI')
            .AsInteger;
          parambyname('COD_CLI').AsCurrency := DataSet.FieldByName('')
            .AsInteger;

        end;

        Query.ExecSQL;
        Transaction.Commit;
      end;
    finally

    end;
  except
    Transaction.Rollback;
  end;
end;

end.
